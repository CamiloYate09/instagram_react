[{"C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\index.js":"1","C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\App.js":"2","C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Componentes\\Nav.js":"3","C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Vistas\\Signup.js":"4","C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Componentes\\Main.js":"5","C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Vistas\\Login.js":"6","C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Helpers\\auth-helpers.js":"7","C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Componentes\\Loading.js":"8","C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Componentes\\Error.js":"9","C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Vistas\\Upload.js":"10","C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Vistas\\Feed.js":"11","C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Componentes\\Post.js":"12","C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Componentes\\Avatar.js":"13","C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Componentes\\BotonLike.js":"14","C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Componentes\\Comentar.js":"15","C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Helpers\\post-helpers.js":"16","C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Vistas\\Post.js":"17","C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Componentes\\RecursoNoExiste.js":"18","C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Vistas\\Explore.js":"19","C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Componentes\\Grid.js":"20","C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Vistas\\Perfil.js":"21","C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Helpers\\amistad-helpers.js":"22","C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Hooks\\useEsMovil.js":"23"},{"size":174,"mtime":1606861233563,"results":"24","hashOfConfig":"25"},{"size":4689,"mtime":1607899016467,"results":"26","hashOfConfig":"25"},{"size":1445,"mtime":1607886661934,"results":"27","hashOfConfig":"25"},{"size":3436,"mtime":1607077027623,"results":"28","hashOfConfig":"25"},{"size":199,"mtime":1606888013574,"results":"29","hashOfConfig":"25"},{"size":2131,"mtime":1607076949268,"results":"30","hashOfConfig":"25"},{"size":1175,"mtime":1607307497446,"results":"31","hashOfConfig":"25"},{"size":240,"mtime":1607323038491,"results":"32","hashOfConfig":"25"},{"size":691,"mtime":1607076633772,"results":"33","hashOfConfig":"25"},{"size":3782,"mtime":1607323106756,"results":"34","hashOfConfig":"25"},{"size":4802,"mtime":1607787351386,"results":"35","hashOfConfig":"25"},{"size":3211,"mtime":1607785341621,"results":"36","hashOfConfig":"25"},{"size":676,"mtime":1607325947638,"results":"37","hashOfConfig":"25"},{"size":668,"mtime":1607326755046,"results":"38","hashOfConfig":"25"},{"size":1137,"mtime":1607783536186,"results":"39","hashOfConfig":"25"},{"size":1426,"mtime":1607784747133,"results":"40","hashOfConfig":"25"},{"size":4757,"mtime":1607839632993,"results":"41","hashOfConfig":"25"},{"size":465,"mtime":1607836028424,"results":"42","hashOfConfig":"25"},{"size":2205,"mtime":1607844258231,"results":"43","hashOfConfig":"25"},{"size":1191,"mtime":1607844877295,"results":"44","hashOfConfig":"25"},{"size":7671,"mtime":1607902904396,"results":"45","hashOfConfig":"25"},{"size":639,"mtime":1607901605130,"results":"46","hashOfConfig":"25"},{"size":650,"mtime":1607902604592,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"hzwu2h",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\index.js",[],["98","99"],"C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\App.js",[],"C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Componentes\\Nav.js",[],"C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Vistas\\Signup.js",[],"C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Componentes\\Main.js",[],"C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Vistas\\Login.js",[],"C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Helpers\\auth-helpers.js",[],"C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Componentes\\Loading.js",[],"C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Componentes\\Error.js",[],"C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Vistas\\Upload.js",[],"C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Vistas\\Feed.js",["100"],"import React, {useEffect, useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Axios from \"axios\";\r\nimport Main from \"../Componentes/Main\";\r\nimport Loading from \"../Componentes/Loading\";\r\nimport Post from \"../Componentes/Post\";\r\n\r\n\r\n/**\r\n * Funcion para retornar los ultimos post por la fecha\r\n * @returns {JSX.Element}\r\n * @constructor\r\n */\r\n\r\nasync function cargarPost(fechaDelUltimoPost) {\r\n    const query = fechaDelUltimoPost ? `?fecha=${fechaDelUltimoPost}` : '';\r\n    const {data: nuevosPosts} = await Axios.get(`/api/posts/feed${query}`);\r\n    return nuevosPosts;\r\n}\r\n/*\r\nVariables Globales\r\n */\r\nconst NUMERO_DE_POSTS_POR_LLAMADA = 3;\r\n\r\n\r\nexport default function Feed({mostrarError,usuario}) {\r\n    const [posts, setPosts] = useState([]);\r\n    const [cargandoPostIniciales, setCargandoPostIniciales] = useState(true);\r\n    const [cargandoMasPosts, setcargandoMasPosts] = useState(false);\r\n    const [todosLosPostsCargados, setTodosLosPostsCargados] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function cargarPostsIniciales() {\r\n            try {\r\n                const nuevosPosts = await cargarPost();\r\n                setPosts(nuevosPosts);\r\n                console.log(nuevosPosts);\r\n                setCargandoPostIniciales(false);\r\n                revisarSiHayMasPosts(nuevosPosts);\r\n\r\n            } catch (error) {\r\n                mostrarError('Hubo un problema cargando tu feed.');\r\n                console.log(error);\r\n\r\n            }\r\n        }\r\n\r\n        cargarPostsIniciales();\r\n    }, []);\r\n\r\n    function actualizarPost(postOriginal, postActualizado){\r\n        setPosts(posts =>{\r\n            const postsActualizados = posts.map(post =>{\r\n                if(post !== postOriginal){\r\n                    return post;\r\n                }\r\n                return postActualizado;\r\n            });\r\n            return postsActualizados;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * método para cargar nuevos posts\r\n     * @returns {Promise<void>}\r\n     */\r\n    async function cargarMasPosts(){\r\n        if(cargandoMasPosts){\r\n            return;\r\n        }\r\n        try {\r\n            /**\r\n             * evitamos que el usuario le de 10 veces al botón\r\n             */\r\n            setcargandoMasPosts(true);\r\n            const  fechaDelUltimoPost = posts[posts.length -1].fecha_creado;\r\n            const nuevosPost = await cargarPost(fechaDelUltimoPost);\r\n            /**\r\n             * Creamos un nuevo array de los viejos posts y le\r\n             * agregamos los nuevos\r\n             */\r\n            setPosts(viejosPosts => [...viejosPosts, ...nuevosPost]);\r\n            setcargandoMasPosts(false);\r\n            revisarSiHayMasPosts(nuevosPost);\r\n        }catch (error){\r\n            mostrarError('Hubo un problema cargando los siguientes posts.');\r\n            console.log(error);\r\n            setcargandoMasPosts(false);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param nuevosPosts\r\n     */\r\n    function revisarSiHayMasPosts(nuevosPosts){\r\n        if(nuevosPosts.length < NUMERO_DE_POSTS_POR_LLAMADA){\r\n            setTodosLosPostsCargados(true);\r\n        }\r\n    }\r\n\r\n    if (cargandoPostIniciales) {\r\n        return (\r\n            <Main center>\r\n                <Loading></Loading>\r\n            </Main>\r\n        );\r\n    }\r\n    if(cargandoPostIniciales && posts.length === 0){\r\n        return(\r\n         <Main center>\r\n             <NoSiguesANadie/>\r\n         </Main>\r\n        )\r\n    }\r\n\r\n\r\n    return (<Main center>\r\n        <div className=\"Feed\">\r\n            {\r\n                posts.map(post => (<Post key={post._id} post={post} actualizarPost={actualizarPost} mostrarError={mostrarError} usuario={usuario}></Post> ))\r\n            }\r\n            <CargarMasPosts onClick={cargarMasPosts} todosLosPostsCargados={todosLosPostsCargados}></CargarMasPosts>\r\n        </div>\r\n    </Main>);\r\n}\r\n\r\nfunction NoSiguesANadie() {\r\n    return (\r\n        <div className=\"NoSiguesANadie\">\r\n            <p className=\"NoSiguesANadie__mensaje\">\r\n                Tu feed no tiene fotos porque no sigues a nadie, o porque no han publicado fotos.\r\n            </p>\r\n            <div className=\"text-center\">\r\n                <Link to=\"/explore\" className=\"NoSiguesANadie__boton\">\r\n                    Explota Clontagram\r\n                </Link>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n/**\r\n *Funcion de paginación para cargar más post\r\n * @param onClick\r\n * @param todosLosPostsCargados\r\n * @returns {JSX.Element}\r\n * @constructor\r\n */\r\nfunction CargarMasPosts({onClick, todosLosPostsCargados}){\r\n    if(todosLosPostsCargados){\r\n        return <div className=\"Feed__no-hay-mas-posts\"> No hay más posts</div>\r\n    }\r\n    return (\r\n        <button className=\"Feed__cargar-mas\" onClick={onClick}>\r\n            Ver más\r\n        </button>\r\n    );\r\n}","C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Componentes\\Post.js",[],"C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Componentes\\Avatar.js",[],"C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Componentes\\BotonLike.js",[],"C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Componentes\\Comentar.js",[],"C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Helpers\\post-helpers.js",[],"C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Vistas\\Post.js",["101"],"import React, {useState, useEffect} from \"react\";\r\nimport Main from \"../Componentes/Main\";\r\nimport Loading from \"../Componentes/Loading\";\r\nimport Avatar from \"../Componentes/Avatar\";\r\nimport Comentar from \"../Componentes/Comentar\";\r\nimport BotonLike from \"../Componentes/BotonLike\";\r\nimport {Link} from \"react-router-dom\";\r\nimport RecursoNoExiste from \"../Componentes/RecursoNoExiste\";\r\nimport Axios from \"axios\";\r\nimport {toggleLike,comentar} from '../Helpers/post-helpers';\r\n\r\n/**\r\n *\r\n * @param mostrarError\r\n * @param match\r\n * @returns {JSX.Element}\r\n * @constructor\r\n */\r\nexport  default function PostVista({mostrarError, match, usuario}) {\r\n    /**\r\n     * tomamos del pàrametro que nos envias desde la URL\r\n     */\r\n    const postId = match.params.id;\r\n    const [post, setPost] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [postNoExiste, setPostNoExiste] = useState(false);\r\n    const [enviandoLike, setEnviandoLike] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        async function cargarPost() {\r\n            try {\r\n\r\n                const {data: post} = await Axios.get(`/api/posts/${postId}`);\r\n                setPost(post);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                if (error.response && (error.response.status === 404 || error.response.status === 400)) {\r\n                    setPostNoExiste(true);\r\n                } else {\r\n                    mostrarError('Hubo un problema cargando este post.');\r\n                }\r\n                setLoading(false);\r\n            }\r\n        }\r\n\r\n        cargarPost();\r\n    }, [postId]);\r\n\r\n\r\n    async function onSubmitComentario(mensaje) {\r\n        const postActualizado = await comentar(post, mensaje, usuario);\r\n        setPost(postActualizado);\r\n\r\n    }\r\n\r\n    async function onSubmitLike() {\r\n        if (enviandoLike) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setEnviandoLike(true);\r\n            const postActualizado = await toggleLike(post);\r\n            setPost(postActualizado);\r\n            setEnviandoLike(false);\r\n\r\n        } catch (error) {\r\n            setEnviandoLike(false);\r\n            mostrarError('Hubo un problema modificando el like. Intenta de Nuevo');\r\n            console.log(error);\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n    if (loading) {\r\n        return (\r\n            <Main center>\r\n                <Loading/>\r\n            </Main>\r\n        )\r\n    }\r\n    if (postNoExiste) {\r\n        return (\r\n            <RecursoNoExiste mensaje=\"El post que estan intentando ver no existe\"/>\r\n        );\r\n    }\r\n    if (post == null) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Main cente>\r\n            <Post {...post} onSubmitComentario={onSubmitComentario} onSubmitLike={onSubmitLike}/>\r\n        </Main>\r\n\r\n    )\r\n}\r\n\r\n/**\r\n *\r\n * @param comentarios\r\n * @param caption\r\n * @param url\r\n * @param usuario\r\n * @param estaLike\r\n * @param onSubmitLike\r\n * @param onSubmitComentario\r\n * @constructor\r\n */\r\nfunction Post({comentarios, caption, url, usuario,estaLike, onSubmitLike, onSubmitComentario}){\r\n    return(\r\n        <div className=\"Post\">\r\n            <div className=\"Post__image-container\">\r\n                <img src={url} alt={caption}/>\r\n            </div>\r\n            <div className=\"Post__side-bar\">\r\n                <Avatar usuario={usuario}></Avatar>\r\n                <div className=\"Post__comentarios-y-like\">\r\n                    <Comentarios usuario={usuario} caption={caption} comentarios={comentarios}/>\r\n                    <div className=\"Post__like\">\r\n                        <BotonLike onSubmited={onSubmitLike} like={estaLike}/>\r\n                    </div>\r\n                    <Comentar onSumitComentario={onSubmitComentario} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nfunction Comentarios({usuario, caption, comentarios }){\r\n    return (\r\n        <ul className=\"Post__comentarios\">\r\n            <li className=\"Post__comentario\">\r\n                <Link to={`/perfil/${usuario.username}`}\r\n                      className=\"Post__autor-comentario\"\r\n                >\r\n                    <b>{usuario.username}</b>\r\n\r\n                </Link>{' '}\r\n                {caption}\r\n            </li>\r\n            {\r\n                comentarios.map(comentario =>(\r\n                    <li className=\"Post__comentario\" key={comentario._id}>\r\n                        <Link to={`/perfil/${comentario.usuario.username}`}\r\n                              className=\"Post__autor-comentario\"\r\n                        >\r\n                            <b>{comentario.usuario.username}</b>\r\n\r\n                        </Link> {' '}\r\n                        {comentario.mensaje}\r\n                    </li>\r\n                ))}\r\n        </ul>\r\n    )\r\n}\r\n","C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Componentes\\RecursoNoExiste.js",[],"C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Vistas\\Explore.js",["102","103"],"import React,{useState, useEffect} from \"react\";\r\nimport Main from \"../Componentes/Main\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Loading from \"../Componentes/Loading\";\r\nimport {ImagenAvatar} from \"../Componentes/Avatar\";\r\nimport Grid from \"../Componentes/Grid\";\r\nimport Axios from \"axios\";\r\n\r\nexport default function Explore({mostrarError}){\r\n    const [posts, setPosts] = useState([]);\r\n    const [usuarios, setUsuarios] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(()=>{\r\n        async function cargarPostYUsuarios(){\r\n            try {\r\n                const [posts, usuarios] = await Promise.all([\r\n                    Axios.get('/api/posts/explore').then(({data}) => data),\r\n                    Axios.get('/api/usuarios/explore').then(({data}) => data)\r\n                ]);\r\n                setPosts(posts);\r\n                setUsuarios(usuarios);\r\n                setLoading(false);\r\n            }catch (error){\r\n                mostrarError('Hubo un problema cargando explore. Por favor refresca la página');\r\n                console.log(error);\r\n            }\r\n        }\r\n        cargarPostYUsuarios();\r\n\r\n    },[])\r\n\r\n    if(loading){\r\n        return (\r\n            <Main center>\r\n                <Loading/>\r\n            </Main>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <Main center>\r\n            <div >\r\n                <h2 className=\"Explore__title\">Descubrir usuarios</h2>\r\n                <div className=\"Explore__usuarios-container\">\r\n                    {usuarios.map(usuario =>{\r\n                        return(\r\n                            <div className=\"Explore__usuario\" key={usuario._id}>\r\n                                <ImagenAvatar usuario={usuario}/>\r\n                                <p>{usuario.username}</p>\r\n                                <Link to={`/perfil/${usuario.username}`}>ver peril</Link>\r\n                            </div>\r\n                        )\r\n                    })\r\n\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <h2 className=\"Explore__title\"></h2>\r\n                <Grid posts={posts}></Grid>\r\n            </div>\r\n\r\n        </Main>\r\n\r\n\r\n    )\r\n\r\n}","C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Componentes\\Grid.js",[],"C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Vistas\\Perfil.js",["104"],"C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Helpers\\amistad-helpers.js",[],"C:\\Users\\smartsoft\\Desktop\\REACT_PROJECTS\\instagram\\clontagram\\cliente\\src\\Hooks\\useEsMovil.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":49,"column":8,"nodeType":"111","endLine":49,"endColumn":10,"suggestions":"112"},{"ruleId":"109","severity":1,"message":"110","line":48,"column":8,"nodeType":"111","endLine":48,"endColumn":16,"suggestions":"113"},{"ruleId":"109","severity":1,"message":"110","line":31,"column":7,"nodeType":"111","endLine":31,"endColumn":9,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":60,"column":17,"nodeType":"117","endLine":60,"endColumn":48},{"ruleId":"109","severity":1,"message":"110","line":45,"column":8,"nodeType":"111","endLine":45,"endColumn":18,"suggestions":"118"},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'mostrarError'. Either include it or remove the dependency array. If 'mostrarError' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["121"],["122"],["123"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement",["124"],"no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"125","fix":"129"},{"desc":"130","fix":"131"},"Update the dependencies array to be: [mostrarError]",{"range":"132","text":"133"},"Update the dependencies array to be: [mostrarError, postId]",{"range":"134","text":"135"},{"range":"136","text":"133"},"Update the dependencies array to be: [mostrarError, username]",{"range":"137","text":"138"},[1542,1544],"[mostrarError]",[1611,1619],"[mostrarError, postId]",[1168,1170],[1857,1867],"[mostrarError, username]"]